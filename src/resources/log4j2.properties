name= properties_configuration

# Give directory path where log files should get stored
property.basePath = ./logs

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = DEBUG
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} | %t | %level | %l | %msg%n


# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.filter.threshold.type = ThresholdFilter
appender.rolling.filter.threshold.level = INFO
#appender.rolling.activeFileName = ${basePath}/app.log
appender.rolling.fileName = ${basePath}/app.log
#appender.rolling.filePattern = ${basePath}/app_%d{yyyyMMdd HH:mm:ss}.log.gz
appender.rolling.filePattern = ${basePath}/app_%d{yyyyMMdd HH:mm:ss}.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} | %t | %level | %l | %msg%n
appender.rolling.policies.type = Policies

# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 600
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB

appender.rolling.strategy.type = DefaultRolloverStrategy

# Delete logs older than 30 days
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
logger.example.name = com.airwallex.codechallenge.app
logger.example.level = DEBUG
logger.example.additivity = false
logger.example.appenderRef.rolling.ref = fileLogger
logger.example.appenderRef.console.ref = consoleLogger

# Configure root logger for logging error logs in classes which are in package other than above specified package
rootLogger.level = DEBUG
rootLogger.additivity = false
rootLogger.appenderRef.rolling.ref = fileLogger
rootLogger.appenderRef.console.ref = consoleLogger

